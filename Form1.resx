<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACIBgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAAZCSURBVHja7d3NbxRlHMDx/jVUqK0Sg6GaqPGi8YrxogcvHHw5eVMxcuNiokYPHkg8
        GA8eMPFEWYttUIwiJcqLVYj4QgWsTaG73dnXmZ8zi8Zwa3HdMsznSb78Ac/M88nsbJff2N1H1kJSNRuz
        CRIAJAFAEgAkAUASACQBQBIAJAFAEgAkAUASACQBQBIAJAFAEgAkAUASACQBQBIAJAFAEgAkAUASACQB
        QBIAJAFAEgAkAUASACQBQBIAJAFAEgAkAUASACSVB4AJ3XJucpUagMm8XbNrMX20HrvzprXhiv3aWXOT
        q6QATAwOfz0OXmzH/HIv5rSpjv7Rjb0nm7F9xo2ukgLwwGf1OLnaC2vzq5dGvHY2ifGZG09SbniVDoDp
        HIATANj0yvI6aRb7cgDuAoAAAAA3vAAAAAkAAJAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAAB
        AAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAAAAABAAAAEAAA
        MHQAun8DMG4ykMoMwDcAuKXVTWMAwLYZQ1INZS0pAMWAy9rVblxpZXG5lWqjJVlcStLYfy6JB3NEH57T
        qHoo775PATCUpmpr8cTnjXjyy/XYow1X7NdTeR/+2okf6v34XiNpMe+7a7148VQzdswAYCgVG7ldm6rY
        s6l87z5e6vosNOLV6mfxypmkFFOZx7wIuXO7twaArVjNHICXTwNAAAAAAAQAAABAAAAAAAQAAABAAAAA
        AAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABAAAAAAAQAAABA
        AAAAAAAAAAAAAADWyFZS/K/AABAA/tvKSlqz5wlAABgeAvk/aYkqPgK8ai6AALC5lZ+bWO1kcaHRj+Mr
        vTi01In3f27Hez+1490L7XinJL15vjWYzmQykACwgXW9m8VX+YEvDvnzC83BKLhiJuQ9tRvzIYvx5tsO
        l6fxw2ulOPwAAMCWrmv5wf/k987g0BdDNSeP/DvW7J8Ju5MlrSz3CAAAMPLVyx/1F1b78dK3zdg1e/OB
        FwB0BwNQz0//B7904rFjjVK8JAOAADCktdLO4sBiK+6frceEww8AVQeAlU4Wr59NBiPLHX4AqEIANPLH
        /jd+bMXOmmsCAFUKgOIPYz76rTP4Ws+LPgCoYgCcvt6Px481SvO9OAAEgCE++u87kzj8AFAVAfjiz248
        MufRHwCqHACdtPjKL/HGHwCqIgBLSRp7jvvsDwBVEoD55V7snvX4DwBVEoCDF9se/wGgKgLQTSP2n0sG
        P+N1HQCgigFQ/Mz3hVNNP/YBgKoIwHI7i2dPAAAAqiQAV1tZPPP1OgAAoKoC8DQAACAAuA4AEAAEAAFA
        ABAABAABQAAQAAQAAUAAEAAEAAFAABAABAABQAAQAAQAAUAAEAAEAAFAABAABAABQAAQAAQAAUAAAAAA
        BAAAAEAAAAAABAAAAEAAAAAAAGATAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAAAAgAAACAAAAA
        AAgAAACAAAAAAAgAAACAAAAAAAgArgMABAABQAAQAAQAAUAAEAAEAAFAABAABAABQAAQAAQAAUAAEAAE
        AAFAABAABAABQAAQAAQAAUAAEAAEAAEAAAAQAAAAAAEAAAAQAAAAAAEAAAAQAAAAAADYCAAAAAACAAAA
        IAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAACAAAAIAAAAAACgAAgAAgAAoAA
        IAAIAAKAACAACAACgAAgAAgAAoAAIAAIAAKAACAACAACgAAgAAgAAoAAIAAIAAKAACAACAAAAIAAAAAA
        CAAAAIAAAAAACAAA+P/WFQAAQLcHAIcudSLLItIRdrmVAgAA2uqm8p5bWI+3z7firRF2YLEVj87XYwcA
        ACAJANrCJkecPQeAJABIAoAkAEgCgCQASAKAJABIAoAkAEgCgCQASAKAJABIAoAkAEgCgCQASAKAJABI
        AoAkAEgCgCQASAKABABJAJAEAEkAkAQASQCQBABJAJAEAEkAkAQASQCQBABJAJAEAEm3Y38Bw0HdoGn3
        MF8AAAAASUVORK5CYII=
</value>
  </data>
</root>